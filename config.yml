--- 
- gather_facts: false
  hosts: all
  remote_user: root
  tasks: 
  
  - name: Configuring dpkg
    become: true
    template:
      src: "templates/{{ item }}"
      dest: "/etc/dpkg/dpkg.cfg.d/{{ item }}"
      mode: 0644
    with_items:
      - unsafe-io

  - name: Installing tools
    apt:
      name: "{{ item }}"
      state: present
      dpkg_options: force-confdef,force-confold,force-unsafe-io
    with_items:
      - git
      - psmisc
      - locales
      - expect
      - python-pip
      - python-dev
      - cython
      - libcapnp-dev

  - name: Remove conflicting tools
    apt:
      name: "{{ item }}"
      state: absent
      dpkg_options: force-confdef,force-confold,force-unsafe-io
    with_items:
      - python-yaml
      - python-psutil

  - name: Cloning appscale
    become: true
    git:
      repo: git://github.com/AppScale/appscale.git
      dest: /root/appscale
      force: yes
      version: release-3.5

  - name: Cloning appscale-tools
    become: true
    git:
      repo: git://github.com/AppScale/appscale-tools.git
      dest: /root/appscale-tools
      force: yes
      version: release-3.5

  - name: Update appscale_build env
    become: true
    shell: "sed 's/^export IN_DOCKER=\"no\"/export IN_DOCKER=\"yes\"/g' -i /root/appscale/debian/appscale_build.sh"

  - name: Generating locale
    become: true
    shell: locale-gen "en_US.UTF-8"

  - name: Installing appscale from source
    become: true
    shell: bash /root/appscale/bootstrap.sh --branch release-3.5 --tools-branch release-3.5
    args:
      chdir: /root

  - name: Creating link to appscale
    become: true
    file:
      src: "/root/{{ item.path }}"
      dest: "/var/lib/{{ item.dest }}"
      state: link
    with_items:
      - { path: "appscale", dest: "appscale" }
      - { path: "appscale-tools", dest: "appscale-tools" }

  - name: Copying scripts
    become: true
    template:
      src: "scripts/{{ item }}"
      dest: "/var/lib/appscale/{{ item }}"
      mode: 0755
    with_items:
      - appscale-up.sh
      - create-appscalefile.sh
      - create-simple-appscalefile.sh
      - fix-domain.sh
      - setup.sh

  - name: nginx config
    become: true
    template:
      src: "templates/{{ item }}"
      dest: "/var/lib/appscale/{{ item }}"
      mode: 0644
    with_items:
      - nginx-default

  - name: Creating AppScalefile
    become: true
    shell: "appscale/create-simple-appscalefile.sh"
    args:
      chdir: /root

  - name: Generating ssh key
    become: true
    shell: "ssh-keygen -t rsa -N \"\" -f .ssh/as.key"
    args:
      chdir: /root

  - name: Authorizing key
    become: true
    shell: "cat .ssh/as.key.pub >> .ssh/authorized_keys"
    args:
      chdir: /root

  - name: Setup AppScale
    become: true
    shell: "appscale/setup.sh {{ domain_name }} {{ admin_email }} {{ admin_password }}"
    args:
      chdir: /root

